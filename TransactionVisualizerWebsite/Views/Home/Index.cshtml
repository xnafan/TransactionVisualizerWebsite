@model TransactionVisualizerWebsite.Models.StockUpdateParameters

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<h4>StockUpdateParameters</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateStock">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="StockChangeAmount" class="control-label"></label>
                <input asp-for="StockChangeAmount" class="form-control" />
                <span asp-validation-for="StockChangeAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PauseBeforeUpdateInSeconds" class="control-label"></label>
                <input asp-for="PauseBeforeUpdateInSeconds" class="form-control" />
                <span asp-validation-for="PauseBeforeUpdateInSeconds" class="text-danger"></span>
            </div>
            <div class="form-group">

                <label asp-for="IsolationLevel" class="control-label"></label>
                <select asp-for="IsolationLevel" asp-items="Html.GetEnumSelectList<StockUpdateParameters.ValidIsolationLevels>()"></select>
                <span asp-validation-for="IsolationLevel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Update stock" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div><a href="/home/RefreshStock?newStockAmount=5">Set stock to 5</a></div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
